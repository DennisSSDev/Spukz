{"version":3,"sources":["components/tags/component.tsx","components/dialog/component.tsx","components/navbar/component.tsx","components/title/component.tsx","components/footer/component.tsx","components/feedEntry/component.tsx","components/infiniteScroll/component.tsx","components/scrollTop/component.tsx","pages/home/component.tsx","pages/companies/component.tsx","pages/code/component.tsx","pages/resources/component.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","createStyles","root","flexGrow","chip","fontSize","borderWidth","width","Tags","props","classes","tight","onChipSelect","React","useState","chipMap","GitHub","GDCVault","Unreal","Unity","values","setValues","gridSpacing","Box","marginTop","mx","fontWeight","textAlign","className","Grid","container","justify","alignItems","direction","item","xs","spacing","map","value","key","Chip","variant","color","clickable","label","onClick","val","Shape","theme","display","flexWrap","textField","marginRight","dense","menu","form","backgroundColor","cancel","submit","fabButton","position","zIndex","top","left","right","margin","buttonProgress","green","marginLeft","buttonSuccess","resources","RegularButton","withStyles","textTransform","Button","FormDialog","resource","open","link","title","description","tags","loading","success","fail","message","buttonClassname","clsx","handleClickOpen","sendPost","a","data","type","fetch","method","headers","body","JSON","stringify","resp","status","json","handleClose","handleChange","name","event","target","ButtonShape","shape","Square","Typography","Fab","aria-label","Dialog","onClose","PaperProps","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","TextField","select","required","onChange","SelectProps","MenuProps","helperText","option","MenuItem","placeholder","fullWidth","multiline","push","remIndex","indexOf","splice","DialogActions","disabled","toolbar","justifyContent","flexDirection","tabSection","contribute","textDecoration","NavBar","AppBar","Toolbar","size","href","WhiteText","divider","marginBottom","borderStyle","borderRadius","Title","appBar","bottom","Footer","Circle","paper","padding","maxWidth","height","maxHeight","imageFrame","image","subTitle","Placeholder","FeedEntry","shadow","imageType","text","subtitle","slice","alignContent","justifyItems","Container","Paper","onMouseEnter","onMouseLeave","elevation","Link","rel","alt","src","sm","zeroMinWidth","gutterBottom","typeMap","YouTube","InfScroll","count","state","Fragment","loadMore","start","end","hasMore","Accept","result","Changed","done","forEach","setState","showEntries","icon","this","loader","newState","Component","ScrollTop","trigger","useScrollTrigger","disableHysteresis","threshold","Zoom","in","anchor","ownerDocument","document","querySelector","scrollIntoView","behavior","block","role","Home","Companies","Code","Resources","App","exact","path","component","createMuiTheme","palette","primary","main","secondary","background","default","render","ThemeProvider","CssBaseline","getElementById"],"mappings":"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","file":"static/js/main.1e293a5d.chunk.js","sourcesContent":["import React from 'react';\nimport { Box, createStyles, Grid, Chip } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      flexGrow: 1\n    },\n    chip: {\n      fontSize: 15,\n      borderWidth: 2,\n      width: 90\n    }\n  })\n);\n\nexport interface PublicProps {\n  canRequest?: boolean;\n  tight?: boolean;\n  onChipSelect?: (resource: string, type: string) => void;\n}\n\nexport interface State {\n  chipMap: Record<string, 'default' | 'outlined' | undefined>;\n}\n\ntype Props = PublicProps;\n\nconst VisualComponent: React.FunctionComponent<Props> = (props: Props) => {\n  const classes = useStyles();\n  const { tight, onChipSelect } = props;\n  const [values, setValues] = React.useState<State>({\n    chipMap: {\n      GitHub: 'outlined',\n      'C++': 'outlined',\n      GDCVault: 'outlined',\n      Unreal: 'outlined',\n      Unity: 'outlined'\n    }\n  });\n\n  const gridSpacing = tight ? 1 : 4;\n  const selectChipSetup = (val: string) => {\n    return () => {\n      const { chipMap } = values;\n      if (chipMap[val] === 'outlined') {\n        chipMap[val] = 'default';\n        setValues({ chipMap });\n      } else {\n        chipMap[val] = 'outlined';\n        setValues({ chipMap });\n      }\n      if (onChipSelect) onChipSelect(val, chipMap[val] as string);\n    };\n  };\n  return (\n    <Box\n      marginTop={3}\n      mx=\"auto\"\n      fontWeight=\"fontWeightBold\"\n      textAlign=\"center\"\n      className={classes.root}\n    >\n      <Grid container justify=\"center\" alignItems=\"center\" direction=\"row\">\n        <Grid item xs={12}>\n          <Grid container justify=\"center\" spacing={gridSpacing}>\n            {['GitHub', 'C++', 'GDCVault', 'Unreal', 'Unity'].map(value => (\n              <Grid key={value} item>\n                <Chip\n                  variant={values.chipMap[value]}\n                  color=\"secondary\"\n                  clickable\n                  label={value}\n                  className={classes.chip}\n                  onClick={selectChipSetup(value)}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport const Tags = VisualComponent;\n","import React from 'react';\nimport clsx from 'clsx';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {\n  Typography,\n  createStyles,\n  Theme,\n  MenuItem,\n  Fab\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport { makeStyles, withStyles } from '@material-ui/styles';\nimport { green } from '@material-ui/core/colors';\nimport { Tags } from '../tags';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    textField: {\n      marginRight: theme.spacing(1),\n      width: 200\n    },\n    dense: {\n      marginTop: 19\n    },\n    menu: {\n      width: 200\n    },\n    form: {\n      backgroundColor: '#6F7688'\n    },\n    cancel: {\n      backgroundColor: '#FF5E63',\n      color: 'white'\n    },\n    submit: {\n      backgroundColor: 'blue'\n    },\n    fabButton: {\n      position: 'absolute',\n      zIndex: 1,\n      top: -30,\n      left: 0,\n      right: 0,\n      margin: '0 auto'\n    },\n    buttonProgress: {\n      color: green[500],\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      marginTop: -12,\n      marginLeft: -12\n    },\n    buttonSuccess: {\n      backgroundColor: green[500],\n      '&:hover': {\n        backgroundColor: green[700]\n      }\n    }\n  })\n);\n\nconst resources = [\n  {\n    value: 'GitHub',\n    label: 'GitHub'\n  },\n  {\n    value: 'GDCVault',\n    label: 'GDC Vault'\n  },\n  {\n    value: 'YouTube',\n    label: 'YouTube'\n  }\n];\n\nexport enum Shape {\n  Circle = 0,\n  Square = 1\n}\n\ninterface PublicProps {\n  shape: Shape;\n}\n\ninterface State {\n  resource: string;\n  open: boolean;\n  tags: string[];\n  link: string;\n  title: string;\n  description: string;\n  loading: boolean;\n  success: boolean;\n  fail: boolean;\n  message: string;\n}\n\nexport const RegularButton = withStyles({\n  root: {\n    textTransform: 'none'\n  }\n})(Button);\n\ntype Props = PublicProps;\n\nexport const FormDialog: React.FunctionComponent<Props> = (props: Props) => {\n  const [values, setValues] = React.useState<State>({\n    resource: 'GitHub',\n    open: false,\n    link: '',\n    title: '',\n    description: '',\n    tags: [],\n    loading: false,\n    success: false,\n    fail: false,\n    message: ''\n  });\n\n  const classes = useStyles();\n\n  const buttonClassname = clsx({\n    [classes.buttonSuccess]: values.success\n  });\n\n  const handleClickOpen = () => {\n    setValues({ ...values, open: true });\n  };\n\n  const sendPost = async () => {\n    setValues({ ...values, loading: true });\n    const data = {\n      type: values.resource,\n      link: values.link,\n      title: values.title,\n      description: values.description,\n      tags: values.tags\n    };\n    const resp = await fetch('/newResource', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(data)\n    });\n    setValues({ ...values, loading: true });\n    if (resp.status === 204) {\n      setValues({ ...values, success: true, message: 'Data has been updated' });\n      return;\n    }\n    if (resp.status === 201) {\n      const json = await resp.json();\n      setValues({ ...values, success: true, message: json.message });\n      return;\n    }\n    if (resp.status >= 300) {\n      try {\n        const json = await resp.json();\n        setValues({ ...values, fail: true, message: json.message });\n      } catch (err) {\n        setValues({ ...values, fail: true, message: `${resp.status}` });\n      }\n    }\n  };\n\n  const handleClose = () => {\n    setValues({\n      ...values,\n      open: false,\n      success: false,\n      fail: false,\n      message: '',\n      loading: false\n    });\n  };\n\n  const onChipSelect = (resource: string, type: string) => {\n    const { tags } = values;\n    if (type === 'outlined') {\n      const remIndex = tags.indexOf(resource);\n      if (remIndex > -1) {\n        tags.splice(remIndex, 1);\n        setValues({ ...values, tags });\n      }\n      return;\n    }\n    tags.push(resource);\n    setValues({ ...values, tags });\n  };\n\n  const handleChange = (name: keyof State) => (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  const { shape } = props;\n\n  let ButtonShape = null;\n  if (shape === Shape.Square) {\n    ButtonShape = () => (\n      <RegularButton\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={handleClickOpen}\n      >\n        <Typography variant=\"h6\">Contribute</Typography>\n      </RegularButton>\n    );\n  } else {\n    ButtonShape = () => (\n      <Fab\n        color=\"secondary\"\n        aria-label=\"add\"\n        className={classes.fabButton}\n        onClick={handleClickOpen}\n      >\n        <AddIcon />\n      </Fab>\n    );\n  }\n\n  const { loading, success, message, fail } = values;\n  return (\n    <div>\n      {ButtonShape()}\n      <Dialog\n        open={values.open}\n        onClose={handleClose}\n        PaperProps={{\n          classes: {\n            root: classes.form\n          }\n        }}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Contribute to Spukz</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Spukz is a mass growing service that helps gameplay programming\n            students to prepare for internships in the game field. Please\n            contribute your resource to help others get ready for their dream\n            job!\n          </DialogContentText>\n          <TextField\n            id=\"standard-select-currency\"\n            select\n            required\n            label=\"Select\"\n            className={classes.textField}\n            value={values.resource}\n            onChange={handleChange('resource')}\n            SelectProps={{\n              MenuProps: {\n                className: classes.menu\n              }\n            }}\n            helperText=\"Resource Type\"\n            margin=\"normal\"\n          >\n            {resources.map(option => (\n              <MenuItem key={option.value} value={option.value}>\n                {option.label}\n              </MenuItem>\n            ))}\n          </TextField>\n          <br />\n          <TextField\n            required\n            id=\"link\"\n            label=\"Link\"\n            placeholder=\"github.com/\"\n            helperText=\"Enter Resource Link\"\n            type=\"search\"\n            onChange={handleChange('link')}\n            fullWidth\n          />\n          <br />\n          <TextField\n            required\n            id=\"title\"\n            label=\"Title\"\n            placeholder=\"Title\"\n            helperText=\"Enter the Title of the Resource\"\n            type=\"search\"\n            onChange={handleChange('title')}\n            fullWidth\n          />\n          <TextField\n            id=\"description\"\n            label=\"Description\"\n            type=\"search\"\n            fullWidth\n            multiline\n            helperText=\"Useful Information\"\n            onChange={handleChange('description')}\n          />\n          <br />\n          <br />\n          <br />\n          <DialogContentText>\n            Select the appropriate tags by which to find your resource:\n          </DialogContentText>\n          <Tags tight onChipSelect={onChipSelect} />\n          <br />\n        </DialogContent>\n        <DialogActions>\n          {(success || fail) && (\n            <DialogContentText color={success ? 'inherit' : 'error'}>\n              {message}\n            </DialogContentText>\n          )}\n          <Button\n            onClick={handleClose}\n            variant=\"contained\"\n            className={classes.cancel}\n            disabled={loading}\n          >\n            Cancel\n          </Button>\n          <Button\n            onClick={sendPost}\n            className={buttonClassname}\n            variant=\"contained\"\n            color=\"secondary\"\n            disabled={loading}\n          >\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { FormDialog, Shape, RegularButton } from '../dialog';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    toolbar: {\n      justifyContent: 'center',\n      flexDirection: 'row',\n      flexWrap: 'nowrap'\n    },\n    tabSection: {\n      flexGrow: 2.19\n    },\n    title: {\n      flexGrow: 0.2,\n      flexDirection: 'row',\n      flexWrap: 'nowrap'\n    },\n    contribute: {\n      flexGrow: 1\n    },\n    link: {\n      textDecoration: 'none'\n    }\n  })\n);\n\nconst VisualComponent: React.FunctionComponent = () => {\n  const classes = useStyles();\n  return (\n    <div>\n      <AppBar>\n        <Toolbar className={classes.toolbar}>\n          <RegularButton size=\"large\" color=\"inherit\" href=\"/\">\n            <Typography className={classes.title} variant=\"h4\">\n              Spukz\n            </Typography>\n          </RegularButton>\n          <div className={classes.contribute}>\n            <FormDialog shape={Shape.Square} />\n          </div>\n\n          <div className={classes.tabSection}>\n            <RegularButton size=\"large\" color=\"secondary\" href=\"/resources\">\n              <Typography variant=\"h5\">Resources</Typography>\n            </RegularButton>\n            <RegularButton size=\"large\" color=\"secondary\" href=\"/code\">\n              <Typography variant=\"h5\">Code</Typography>\n            </RegularButton>\n            <RegularButton size=\"large\" color=\"secondary\" href=\"/companies\">\n              <Typography variant=\"h5\">Companies</Typography>\n            </RegularButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport const NavBar = VisualComponent;\n","import React from 'react';\nimport { Typography, Box, createStyles } from '@material-ui/core';\nimport { withStyles, makeStyles } from '@material-ui/styles';\n\nexport interface PublicProps {\n  title: string;\n}\n\ntype Props = PublicProps;\n\nexport const WhiteText = withStyles({\n  root: {\n    color: 'white'\n  }\n})(Typography);\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    divider: {\n      display: 'block',\n      marginTop: 1,\n      marginBottom: 28,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      borderStyle: 'solid',\n      color: '#20599B',\n      width: 350,\n      borderWidth: 3,\n      borderRadius: 30\n    }\n  })\n);\n\nconst VisualComponent: React.FunctionComponent<Props> = (props: Props) => {\n  const { title } = props;\n  const classes = useStyles();\n  return (\n    <Box\n      marginTop={15}\n      mx=\"auto\"\n      fontWeight=\"fontWeightBold\"\n      textAlign=\"center\"\n    >\n      <hr className={classes.divider} />\n      <WhiteText variant=\"h4\">{title}</WhiteText>\n    </Box>\n  );\n};\n\nexport const Title = VisualComponent;\n","import React from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { Typography } from '@material-ui/core';\nimport { FormDialog, Shape } from '../dialog';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    appBar: {\n      top: 'auto',\n      bottom: 0\n    }\n  })\n);\n\nconst VisualComponent: React.FunctionComponent = () => {\n  const classes = useStyles();\n\n  return (\n    <AppBar color=\"primary\" position=\"fixed\" className={classes.appBar}>\n      <Toolbar>\n        <FormDialog shape={Shape.Circle} />\n        <Typography>(c) Dennis Slavinsky</Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport const Footer = VisualComponent;\n","import React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { Box, Link, Container } from '@material-ui/core';\nimport { WhiteText } from '../title';\nimport './custom.scss';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1\n    },\n    paper: {\n      padding: theme.spacing(2),\n      margin: '0 auto',\n      maxWidth: 500,\n      backgroundColor: '#424242',\n      height: 180,\n      maxHeight: 180\n    },\n    imageFrame: {\n      width: 78,\n      height: 78\n    },\n    image: {\n      marginTop: 28,\n      display: 'block',\n      maxWidth: '100%',\n      maxHeight: '100%'\n    },\n    subTitle: {\n      color: '#BEBEBE'\n    }\n  })\n);\n\nexport interface PublicProps {\n  title?: string;\n  subtitle?: string;\n  text?: string;\n  image?: string;\n  imageType?: string;\n  link?: string;\n}\n\ntype Props = PublicProps;\n\nconst Placeholder: React.FunctionComponent<{}> = () => {\n  return (\n    <div className=\"placeholder-content\">\n      <div className=\"placeholder-content_item\" />\n      <div className=\"placeholder-content_item\" />\n      <div className=\"placeholder-content_item\" />\n      <div className=\"placeholder-content_item\" />\n      <div className=\"placeholder-content_item\" />\n      <div className=\"placeholder-content_item\" />\n      <div className=\"placeholder-content_item\" />\n      <div className=\"placeholder-content_item\" />\n      <div className=\"placeholder-content_item\" />\n      <div className=\"placeholder-content_item\" />\n      <div className=\"placeholder-content_item\" />\n    </div>\n  );\n};\n\ninterface State {\n  shadow: number;\n}\n\nconst VisualComponent: React.FunctionComponent<Props> = (props: Props) => {\n  const [values, setValues] = React.useState<State>({\n    shadow: 2\n  });\n  const { title, image, imageType, link } = props;\n  let { text, subtitle } = props;\n  const classes = useStyles();\n\n  if (!title) {\n    return <Placeholder />;\n  }\n  if (text) {\n    text = text.slice(0, 120);\n    text += '...';\n  }\n\n  if (subtitle) {\n    subtitle = subtitle.slice(0, 75);\n  }\n\n  const onMouseEnter = () => {\n    setValues({ shadow: 20 });\n  };\n\n  const onMouseExit = () => {\n    setValues({ shadow: 2 });\n  };\n\n  return (\n    <Box\n      marginTop={4}\n      alignContent=\"center\"\n      justifyItems=\"center\"\n      className={classes.root}\n    >\n      <Container maxWidth=\"sm\">\n        <Paper\n          className={classes.paper}\n          onMouseEnter={onMouseEnter}\n          onMouseLeave={onMouseExit}\n          elevation={values.shadow}\n        >\n          <Link href={link} target=\"_blank\" rel=\"noopener\">\n            <Grid container spacing={2}>\n              <Grid item>\n                <div className={classes.imageFrame}>\n                  <img\n                    className={classes.image}\n                    alt=\"complex\"\n                    src={`data:image/${imageType || 'png'};base64, ${image}`}\n                  />\n                </div>\n              </Grid>\n              <Grid item xs={12} sm container>\n                <Grid item xs container direction=\"column\" spacing={2}>\n                  <Grid item xs zeroMinWidth>\n                    <WhiteText gutterBottom variant=\"h6\">\n                      {`Added new ${title}`}\n                    </WhiteText>\n                    <Typography\n                      variant=\"body1\"\n                      className={classes.subTitle}\n                      gutterBottom\n                    >\n                      {`${subtitle}`}\n                    </Typography>\n                    <Typography\n                      variant=\"body2\"\n                      className={classes.subTitle}\n                      color=\"textSecondary\"\n                    >\n                      {`${text}`}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Link>\n        </Paper>\n      </Container>\n    </Box>\n  );\n};\n\nexport const FeedEntry = VisualComponent;\n","import React from 'react';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { FeedEntry } from '../feedEntry';\n\ninterface Resource {\n  type: string;\n  link: string;\n  title: string;\n  icon?: string;\n  description: string;\n}\n\nexport interface State {\n  start: number;\n  end: number;\n  hasMore: boolean;\n  resources: Resource[];\n  count: number;\n  tags: Record<string, boolean>;\n}\n\nexport interface PublicProps {\n  tags: Record<string, boolean>;\n}\n\ntype Props = PublicProps;\n\nconst typeMap: Record<string, string> = {\n  GitHub: 'Repository',\n  YouTube: 'YouTube Video',\n  GDCVault: 'GDC Vault Video'\n};\n\nclass VisualComponent extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      start: 0,\n      end: 0,\n      resources: [],\n      hasMore: true,\n      count: 0,\n      tags: {\n        GitHub: false,\n        'C++': false,\n        GDCVault: false,\n        Unreal: false,\n        Unity: false\n      }\n    };\n  }\n\n  static async getDerivedStateFromProps(props: Props, state: State) {\n    const newState = state;\n    // const arr = Object.values(props.tags);\n    // const tags = Object.values(newState.tags);\n    if (props.tags.Changed === true) {\n      newState.resources = [];\n      newState.start = 0;\n      newState.end = 0;\n      newState.hasMore = true;\n      newState.tags = props.tags;\n    }\n    return newState;\n  }\n\n  placeholder = () => {\n    const { count } = this.state;\n    return (\n      <React.Fragment key={`${count}PL`}>\n        <FeedEntry />\n        <FeedEntry />\n        <FeedEntry />\n      </React.Fragment>\n    );\n  };\n\n  loadMore = async () => {\n    let { start, end, hasMore, count } = this.state;\n    const { tags } = this.props;\n    start = end;\n    end += 3;\n    const result = await fetch(\n      `/getFeed?start=${start}&end=${end}&vault=${tags.GDCVault}&github=${tags.GitHub}&cpp=${tags['C++']}&unity=${tags.Unity}&unreal=${tags.Unreal}`,\n      {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json'\n        }\n      }\n    );\n    tags.Changed = false;\n    const data = await result.json();\n    hasMore = !data.done;\n    const { resources } = this.state;\n    data.resources.forEach((item: any) => {\n      resources.push(item);\n    });\n    count++;\n    this.setState({ resources, hasMore, count, start, end });\n  };\n\n  showEntries = () => {\n    const { resources, count } = this.state;\n    return (\n      <React.Fragment key={`${count}EN`}>\n        {resources.map(value => (\n          <React.Fragment key={value.link}>\n            <FeedEntry\n              title={typeMap[value.type]}\n              subtitle={value.title}\n              text={value.description}\n              image={value.icon || ''}\n              link={value.link}\n              imageType={value.type === 'GitHub' ? 'svg+xml' : ''}\n            />\n          </React.Fragment>\n        ))}\n      </React.Fragment>\n    );\n  };\n\n  render() {\n    const { hasMore } = this.state;\n    return (\n      <React.Fragment>\n        <InfiniteScroll\n          loadMore={this.loadMore}\n          hasMore={hasMore}\n          loader={this.placeholder()}\n        >\n          {this.showEntries()}\n        </InfiniteScroll>\n      </React.Fragment>\n    );\n  }\n}\n\nexport const InfScroll = VisualComponent;\n","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport Zoom from '@material-ui/core/Zoom';\nimport { Fab } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      position: 'fixed',\n      bottom: 85,\n      right: theme.spacing(2)\n    }\n  })\n);\n\nconst VisualComponent: React.FunctionComponent<{}> = () => {\n  const classes = useStyles();\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 100\n  });\n\n  const handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\n    const anchor = (\n      (event.target as HTMLDivElement).ownerDocument || document\n    ).querySelector('#top-anchor');\n\n    if (anchor) {\n      anchor.scrollIntoView({ behavior: 'smooth', block: 'center' });\n    }\n  };\n\n  return (\n    <Zoom in={trigger}>\n      <div onClick={handleClick} role=\"presentation\" className={classes.root}>\n        <Fab color=\"secondary\" size=\"medium\" aria-label=\"scroll back to top\">\n          <KeyboardArrowUpIcon />\n        </Fab>\n      </div>\n    </Zoom>\n  );\n};\n\nexport const ScrollTop = VisualComponent;\n","import React from 'react';\nimport { Box } from '@material-ui/core';\nimport { makeStyles, createStyles } from '@material-ui/styles';\nimport { NavBar } from '../../components/navbar';\nimport { Title, WhiteText } from '../../components/title';\nimport { Tags } from '../../components/tags';\nimport { Footer } from '../../components/footer';\nimport { InfScroll } from '../../components/infiniteScroll';\nimport { ScrollTop } from '../../components/scrollTop';\n\nexport interface State {\n  tags: Record<string, boolean>;\n}\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    divider: {\n      marginTop: 1,\n      marginBottom: 10,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      borderStyle: 'solid',\n      color: '#252525',\n      width: 600,\n      borderWidth: 2,\n      borderRadius: 30\n    }\n  })\n);\n\nconst VisualComponent: React.FunctionComponent = () => {\n  const [values, setValues] = React.useState<State>({\n    tags: {\n      GitHub: false,\n      'C++': false,\n      GDCVault: false,\n      Unreal: false,\n      Unity: false,\n      Changed: true\n    }\n  });\n\n  const classes = useStyles();\n\n  const storeChip = (resource: string, type: string) => {\n    const { tags } = values;\n    if (type === 'outlined') {\n      tags[resource] = false;\n    } else {\n      tags[resource] = true;\n    }\n    tags.Changed = true;\n    setValues({ tags });\n  };\n\n  return (\n    <React.Fragment>\n      <NavBar />\n      <ScrollTop />\n      <div className=\"content\">\n        <div id=\"top-anchor\">\n          <Title title=\"Feed\" />\n        </div>\n        <Tags onChipSelect={storeChip} />\n        <InfScroll tags={values.tags} />\n      </div>\n      <Box\n        marginTop={4}\n        marginBottom={15}\n        mx=\"auto\"\n        fontWeight=\"fontWeightBold\"\n        textAlign=\"center\"\n      >\n        <hr className={classes.divider} />\n        <WhiteText>\n          It appears you have reached the end... Or have you?\n        </WhiteText>\n      </Box>\n      <Footer />\n    </React.Fragment>\n  );\n};\n\nexport const Home = VisualComponent;\n","import React from 'react';\nimport { Title } from '../../components/title';\nimport { Footer } from '../../components/footer';\nimport { ScrollTop } from '../../components/scrollTop';\nimport { NavBar } from '../../components/navbar';\n\nconst VisualComponent: React.FunctionComponent = () => {\n  return (\n    <React.Fragment>\n      <NavBar />\n      <ScrollTop />\n      <div className=\"content\">\n        <div id=\"top-anchor\">\n          <Title title=\"Companies\" />\n        </div>\n      </div>\n      <Footer />\n    </React.Fragment>\n  );\n};\n\nexport const Companies = VisualComponent;\n","import React from 'react';\nimport { Title } from '../../components/title';\nimport { Footer } from '../../components/footer';\nimport { ScrollTop } from '../../components/scrollTop';\nimport { NavBar } from '../../components/navbar';\n\nconst VisualComponent: React.FunctionComponent = () => {\n  return (\n    <React.Fragment>\n      <NavBar />\n      <ScrollTop />\n      <div className=\"content\">\n        <div id=\"top-anchor\">\n          <Title title=\"Code\" />\n        </div>\n      </div>\n      <Footer />\n    </React.Fragment>\n  );\n};\n\nexport const Code = VisualComponent;\n","import React from 'react';\nimport { Title } from '../../components/title';\nimport { Footer } from '../../components/footer';\nimport { ScrollTop } from '../../components/scrollTop';\nimport { NavBar } from '../../components/navbar';\n\nconst VisualComponent: React.FunctionComponent = () => {\n  return (\n    <React.Fragment>\n      <NavBar />\n      <ScrollTop />\n      <div className=\"content\">\n        <div id=\"top-anchor\">\n          <Title title=\"Resources\" />\n        </div>\n      </div>\n      <Footer />\n    </React.Fragment>\n  );\n};\n\nexport const Resources = VisualComponent;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Home } from './pages/home';\nimport { Companies } from './pages/companies';\nimport { Code } from './pages/code';\nimport { Resources } from './pages/resources';\n\nconst App: React.FunctionComponent = () => {\n  const AppSwitch = () => (\n    <div>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/companies\" component={Companies} />\n        <Route path=\"/code\" component={Code} />\n        <Route path=\"/resources\" component={Resources} />\n      </Switch>\n    </div>\n  );\n  return (\n    <Switch>\n      <AppSwitch />\n    </Switch>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport { CssBaseline, createMuiTheme } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/styles';\nimport App from './App';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#333333'\n    },\n    secondary: {\n      main: '#82B4EE'\n    },\n    background: {\n      default: '#1B1B1B'\n    }\n  }\n});\n\nrender(\n  <BrowserRouter>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}